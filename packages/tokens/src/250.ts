import { ChainId, Token, WBNB, WFANTOM } from '@pancakeswap/sdk'
import { BUSD_BSC, DK_MAINNET, USDT_BSC, USDC_FANTOM, USDT_FTM, CAKE_MAINNET } from './common'

export const FantomTokens = {
  wfantom: WFANTOM[ChainId.fantomOpera],
  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used
  ftm: new Token(ChainId.fantomOpera, '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83', 18, 'FANTOM', 'FANTOM', '#'),
  cake: CAKE_MAINNET,
  usdc: USDC_FANTOM,
  usdt: USDT_FTM,
  dknight: DK_MAINNET,
  undead: new Token(
    ChainId.fantomOpera,
    '0x551C61DB482289994e7d426Fc4DB6493918bB81D',
    18,
    'UNDEAD',
    'Undead Finance',
    '#',
  ),
  weth: new Token(
    ChainId.fantomOpera,
    '0x74b23882a30290451A17c44f4F05243b6b58C76d',
    18,
    'multiWETH',
    'WETH Token',
    '#',
  ),
  wbtc: new Token(ChainId.fantomOpera, '0x321162cd933e2be498cd2267a90534a804051b11', 8, 'multiBTC', 'WBTC Token', '#'),
  fusd: new Token(ChainId.fantomOpera, '0xAd84341756Bf337f5a0164515b1f6F993D194E1f', 18, 'FUSD', 'FUSD Token', '#'),
  fusdt: new Token(ChainId.fantomOpera, '0x049d68029688eAbF473097a2fC38ef61633A3C7A', 6, 'FUSDT', 'Frapped Usdt', '#'),
  dai: new Token(ChainId.fantomOpera, '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e', 18, 'DAI', 'DAI coin', '#'),
  fatcake: new Token(
    ChainId.fantomOpera,
    '0x4a3DCE89cA816D4F10864664B6503df95a92d879',
    18,
    'FATCAKE',
    'FATCAKE Token',
    '#',
  ),
  fdlaunch: new Token(
    ChainId.fantomOpera,
    '0xef393310b708761e3b6b59813ef41fe45d853cec',
    18,
    'fDLAUNCH',
    'fDLAUNCH Token',
    '#',
  ),
  dep: new Token(ChainId.fantomOpera, '0x8dFDC61c7c7551D0DEec950A2822eB59cddb8f59', 18, 'DEP', 'DEAP Coin', '#'),
  sing: new Token(ChainId.fantomOpera, '0x53D831e1db0947c74e8a52618f662209ec5dE0cE', 18, 'SING', 'Singular', '#'),
  duo: new Token(ChainId.fantomOpera, '0x779d5AECf90c724347B6A5a92083DaF57296459E', 18, 'DUO', 'DUO', '#'),
  dfy: new Token(ChainId.fantomOpera, '0x84b0b7718f8480A9eDa3133Fd385D7EDf2b1d1c4', 18, 'DFY', 'DefySwap', '#'),
  aod: new Token(ChainId.fantomOpera, '0x632819c470cf8c1b4b09ca12d5d3e0c2d19c987d', 18, 'AOD', 'AOD', '#'),
  flory: new Token(ChainId.fantomOpera, '0x05ce3e76ede285d6ed2507d5472ca1c061ac9a8c', 18, 'FLORY', 'FLORY', '#'),
  ftmo: new Token(ChainId.fantomOpera, '0x9bD0611610A0f5133e4dd1bFdd71C5479Ee77f37', 18, 'FTMO', 'FTMO', '#'),
  naut: new Token(ChainId.fantomOpera, '0x9c11ca3b1012bb752e1b57f939e3a86af354675c', 18, 'NAUT', 'ASTRONAUT', '#'),
  stable: new Token(ChainId.fantomOpera, '0x14d6111dbfD64CEb9676a494BF86AA9f7DD54acC', 18, '5TABLE', '5TABLE', '#'),
  fast: new Token(ChainId.fantomOpera, '0x0299461eE055bbb6dE11fAfE5a0636A0C3Bd5E8d', 18, 'FAST', 'FAST', '#'),
  mp: new Token(ChainId.fantomOpera, '0x3264810174f577F82DDD4FD08818F368AC363505', 9, 'MP', 'MiniPanther', '#'),
  wmp: new Token(ChainId.fantomOpera, '0x376d7370347fd8baccfa918362d80fafe7792890', 18, 'WMP', 'Wrapped sMP', '#'),
  proto: new Token(ChainId.fantomOpera, '0xa23c4e69e5Eaf4500F2f9301717f12B578b948FB', 18, 'PROTON', 'PROTON', '#'),
  thunder: new Token(ChainId.fantomOpera, '0x8B7ec83ec7a687Dd81596d0251Bae16d4F005B6c', 18, 'THUNDER', 'THUNDER', '#'),
  fspa: new Token(ChainId.fantomOpera, '0x63aad0448F58ae1B98d75456CFC6f39235e353F6', 18, 'fSPA', 'fSPA', '#'),
  flibero: new Token(ChainId.fantomOpera, '0xC3f069D7439baf6D4D6E9478D9Cc77778E62D147', 18, 'FLIBERO', 'FLIBERO', '#'),
  asnt: new Token(ChainId.fantomOpera, '0x5B3C1F260E09e653290f24F75abC5e466fD42310', 18, 'ASNT', 'ASNT', '#'),
  bnb: new Token(ChainId.fantomOpera, '0xD67de0e0a0Fd7b15dC8348Bb9BE742F3c5850454', 18, 'BNB', 'BNB', '#'),
}
